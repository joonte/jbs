<?php

#-------------------------------------------------------------------------------
/** @author Alex Keda, for www.host-food.ru */
/******************************************************************************/
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/
if(Is_Error(System_Load('classes/HostingServer.class.php','classes/VPSServer.class.php','classes/DNSmanagerServer.class.php','libs/IPMI.SuperMicro.php')))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Where = Array(
		'`Services`.`ID` = `ServersGroups`.`ServiceID`',
		'(`ServersGroups`.`ID` = `Servers`.`ServersGroupID`)',
		'(SELECT `ServiceID` FROM `ServersGroups` WHERE `Servers`.`ServersGroupID` = `ServersGroups`.`ID`) = 10000 OR (SELECT `ServiceID` FROM `ServersGroups` WHERE `Servers`.`ServersGroupID` = `ServersGroups`.`ID`) = 52000 OR (SELECT `ServiceID` FROM `ServersGroups` WHERE `Servers`.`ServersGroupID` = `ServersGroups`.`ID`) = 30000',
		);
#-------------------------------------------------------------------------------
$Columns = Array(
		'`Servers`.`ID`','Address','`Servers`.`IsActive`','`Servers`.`Params`',
		'(SELECT `Name` FROM `ServersGroups` WHERE `ServersGroups`.`ID` = `Servers`.`ServersGroupID`) AS `Name`',
		'(SELECT `Code` FROM `Services` WHERE `Services`.`ID` = `ServersGroups`.`ServiceID`) AS `Code`',
		);
#-------------------------------------------------------------------------------
$Servers = DB_Select(Array('Servers','ServersGroups','Services'),$Columns,Array('Where'=>$Where,'SortOn'=>Array('ServersGroupID','Address')));
#-------------------------------------------------------------------------------
switch(ValueOf($Servers)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	return Time() + 1800;
case 'array':
	break;
default:
	return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$Array = Array();
#-------------------------------------------------------------------------------
foreach($Servers as $Server){
	#-------------------------------------------------------------------------------
	//if($Server['Address'] != 'kvm.host-food.ru')
	//	continue;
	#-------------------------------------------------------------------------------
	if(!$Server['IsActive'])
		continue;
	#-------------------------------------------------------------------------------
	# если время последнего опроса задано, и с тех пор прошло меньше 15 минут - пропускаем
	if(IsSet($Server['Params']['LastQuestioning']) && $Server['Params']['LastQuestioning'] > Time() - 1800)
		continue;
	#-------------------------------------------------------------------------------
	$Array[] = $Server;
	#-------------------------------------------------------------------------------
}
#-------------------------------------------------------------------------------
if(SizeOf($Array) < 1){
	#-------------------------------------------------------------------------------
	// сервера обстукиваем два раза в сутки, ночью и днём. ночью ещё IPMI ребутается
	// TODO: наверное, надо вынести в отдельный таск. до кучи ещё и свои сервера опрашивать
	if(!In_Array(Date('G'),Array(2,3,14))){
		#-------------------------------------------------------------------------------
		Debug(SPrintF('[comp/Tasks/ServersQuestioning]: все сервера услуг опрошены'));
		#-------------------------------------------------------------------------------
		return Time() + 1800;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	Debug(SPrintF('[comp/Tasks/ServersQuestioning]: все сервера услуг опрошены, опрос выделенных серверов'));
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	// достаём список выделенных серверов, НЕсломанных
	$DSServers = DB_Select('DSSchemes',Array('ID','Name','ILOaddr','ILOuser','ILOpass','(SELECT `UserID` FROM `DSOrdersOwners` WHERE `SchemeID` = `DSSchemes`.`ID` AND `StatusID` = "Active")'),Array('Where'=>'`IsBroken` = "no"','SortOn'=>Array('Name')));
	#-------------------------------------------------------------------------------
	switch(ValueOf($DSServers)){
	case 'error':
		return ERROR | @Trigger_Error(500);
	case 'exception':
		return Time() + 1800;
	case 'array':
		break;
	default:
		return ERROR | @Trigger_Error(101);
	}
	#-------------------------------------------------------------------------------
	// массив для проблем, вдруг более одной
	$ErrorsOut = Array();
	#-------------------------------------------------------------------------------
	// перебираем выделенные сервера, опрашиваем
	foreach($DSServers as $DSServer){
		#-------------------------------------------------------------------------------
		if(!$DSServer['ILOaddr'] || !$DSServer['ILOuser'] || !$DSServer['ILOpass']){
			#-------------------------------------------------------------------------------
			Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не заданы данные для подключения к IPMI сервера %s',$DSServer['Name']/*,$Status->String*/));
			#-------------------------------------------------------------------------------
			continue;
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		#-------------------------------------------------------------------------------
		// ключ кэширования, что операция уже выполнялась
		$CacheID = Md5(SPrintF('%s-%s',$__FILE__,$DSServer['Name']));
		#-------------------------------------------------------------------------------
		if(CacheManager::get($CacheID)){
			#-------------------------------------------------------------------------------
			Debug(SPrintF('[comp/Tasks/ServersQuestioning]: сервер %s опрошен в %s, пропускаем',$DSServer['Name'],Date('H:i:s',Time())));
			#-------------------------------------------------------------------------------
			continue;
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		#-------------------------------------------------------------------------------
		// два часа ночи, понедельник, перезагружаем IPMI
		if(Date('G') == 2 && Date('N') == 1){
			$Result = IPMI_Command($DSServer,'mc reset cold');
			if(Is_Exception($Result))
				Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не удалось выполнить команду перезагрузки IPMI сервера %s',$DSServer['Name']));
			#-------------------------------------------------------------------------------
			// запоминаем что к этому серверу мы уже тыкались
			CacheManager::add($CacheID,Time(),3600);
			#-------------------------------------------------------------------------------
			// и ничего больше не делаем
			continue;
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		// в три часа ночи, проставялем верное время
		if(Date('G') == 3){
			#-------------------------------------------------------------------------------
			$Result = IPMI_Command($DSServer,SPrintF('sel time set "%s"',Date('m/d/Y H:i:s')));
			if(Is_Exception($Result))
				Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не удалось установить точное время в IPMI сервера %s',$DSServer['Name']));
			#-------------------------------------------------------------------------------
			// и ничего больше не делаем
			continue;
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		#-------------------------------------------------------------------------------
		// информация из IPMI
		$Status = IPMI_StatusGet($DSServer);
		if(Is_Exception($Status)){
			#-------------------------------------------------------------------------------
			Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не удалось достучаться до IPMI сервера %s',$DSServer['Name']/*,$Status->String*/));
			#-------------------------------------------------------------------------------
		}else{
			#-------------------------------------------------------------------------------
			foreach(Array_Keys($Status) as $Key){
				#-------------------------------------------------------------------------------
				$Value = $Status[$Key];
				#-------------------------------------------------------------------------------
				if(!$Value)
					continue;
				#-------------------------------------------------------------------------------
				if(Preg_Match('/System\sPower/i',$Key))
					Debug(SPrintF('[comp/Tasks/ServersQuestioning]: IPMI power status %s: %s',$DSServer['Name'],$Value));
				#-------------------------------------------------------------------------------
				if($Value == 'true'){
					#-------------------------------------------------------------------------------
					$Text = SPrintF('обнаружена проблема в IPMI сервера %s, %s: %s',$DSServer['Name'],$Key,$Value);
					#-------------------------------------------------------------------------------
					Debug(SPrintF('[comp/Tasks/ServersQuestioning]: %s',$Text));
					#-------------------------------------------------------------------------------
					$ErrorsOut[] = $Text;
					#-------------------------------------------------------------------------------
				}
				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		#-------------------------------------------------------------------------------
		// если сейчас два часа дня, понедельник - перезагружаем IPMI, и выгружаем логи
		if(Date('G') == 14 && Date('N') == 1){
			#-------------------------------------------------------------------------------
			// достаём количество записей в логе
			$Result = IPMI_Sel($DSServer);
			#-------------------------------------------------------------------------------
			if(Is_Exception($Result)){
				#-------------------------------------------------------------------------------
				Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не удалось получить статус логов сервера %s',$DSServer['Name']));
				#-------------------------------------------------------------------------------
			}else{
				#-------------------------------------------------------------------------------
				// а есть ли записи в логе? тогда достаём их
				if($Result['Entries'] > 0){
					#-------------------------------------------------------------------------------
					$Result = IPMI_SelList($DSServer);
					#-------------------------------------------------------------------------------
					if(Is_Exception($Result)){
						#-------------------------------------------------------------------------------
						Debug(SPrintF('[comp/Tasks/ServersQuestioning]: в логе сервера %s найдено %s новых записей, но извлечь их не удлаось',$DSServer['Name'],$Result['Entries']));
						#-------------------------------------------------------------------------------
					}else{
						#-------------------------------------------------------------------------------
						//Debug(SPrintF('[comp/Tasks/ServersQuestioning]: записи логов из IPMI для сервера %s = %s',$DSServer['Name'],print_r($Result,true)));
						#-------------------------------------------------------------------------------
						// отсылаем лог на почту. пока - тока мне
						$Message = "";
						#-------------------------------------------------------------------------------
						foreach($Result as $Event)
							$Message = SPrintF("%s\n\n[code]%s[/code]",$Message,$Event);
						#-------------------------------------------------------------------------------
						// вероятно, надо настройку - слать только админу или админу/юзерам, или только юзерам... подумать в общем.
						// If(Is_Null($DSServer['UserID']))
						// 	шлём админу
						//
						//
						// отправляем сообщение
						$IsSend = NotificationManager::sendMsg(new Message('DSOrdersIpmiEvents',/*(integer)$Order['UserID']*/2248,Array('DSServer'=>$DSServer,'Message'=>$Message)));
						#-------------------------------------------------------------------------------
						switch(ValueOf($IsSend)){
						case 'error':
							return ERROR | @Trigger_Error(500);
						case 'exception':
							# No more...
						case 'true':
							# No more...
							break;
						default:
							return ERROR | @Trigger_Error(101);
						}
						#-------------------------------------------------------------------------------
						#-------------------------------------------------------------------------------
						// чистим лог
						$Result = IPMI_Command($DSServer,'sel clear');
						if(Is_Exception($Result))
							Debug(SPrintF('[comp/Tasks/ServersQuestioning]: не удалось очистить лог IPMI для сервера %s',$DSServer['Name']));
						#-------------------------------------------------------------------------------
						// бывает, не успевает очистить а уже команда перезагрузки IPMI
						Sleep(1);
						#-------------------------------------------------------------------------------
					}
					#-------------------------------------------------------------------------------
				}else{
					#-------------------------------------------------------------------------------
					Debug(SPrintF('[comp/Tasks/ServersQuestioning]: в логе сервера %s нет новых записей',$DSServer['Name']));
					#-------------------------------------------------------------------------------
				}

				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		// запоминаем что к этому серверу мы уже тыкались
		CacheManager::add($CacheID,Time(),3600);
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	// проверяем, есть ли непрочитанные сообщения
	$Count = DB_Count('Events',Array('Where'=>"`IsReaded` != 'yes'"));
	if(Is_Error($Count))
		return ERROR | @Trigger_Error(500);
	#-------------------------------------------------------------------------------
	// непрочитанных нет, ошибки есть
	if(!$Count && SizeOf($ErrorsOut) > 0){
		#-------------------------------------------------------------------------------
		foreach($ErrorsOut as $Text){
			#-------------------------------------------------------------------------------
			$Event = Array('UserID'=>100,'PriorityID'=>'Warning','IsReaded'=>FALSE,'Text'=>$Text);
			$Event = Comp_Load('Events/EventInsert',$Event);
			if(!$Event)
				return ERROR | @Trigger_Error(500);
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return Time() + 1800;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
Debug(SPrintF('[comp/Tasks/ServersQuestioning]: необходимо опросить серверов: %u',SizeOf($Array)));
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$GLOBALS['TaskReturnInfo'] = Array();
#-------------------------------------------------------------------------------
$Server = Current($Array);
#-------------------------------------------------------------------------------
if(Is_Null($Server['Name']))
	$Server['Name'] = 'NoGroup';
#-------------------------------------------------------------------------------
if(!IsSet($GLOBALS['TaskReturnInfo'][$Server['Name']]))
	$GLOBALS['TaskReturnInfo'][$Server['Name']] = Array();
#-------------------------------------------------------------------------------
$GLOBALS['TaskReturnInfo'][$Server['Name']][] = $Server['Address'];
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$ClassName = SPrintF('%sServer',$Server['Code']);
#-------------------------------------------------------------------------------
$ClassServer = new $ClassName();
#-------------------------------------------------------------------------------
$IsSelected = $ClassServer->Select((integer)$Server['ID']);
#-------------------------------------------------------------------------------
switch(ValueOf($IsSelected)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	return ERROR | @Trigger_Error(400);
case 'true':
	#-------------------------------------------------------------------------------
	$Users = $ClassServer->GetDomains();
	#-------------------------------------------------------------------------------
	switch(ValueOf($Users)){
	case 'error':
		# No more...
		break 2;
	case 'exception':
		# No more...
		break 2;
	case 'array':
		#-------------------------------------------------------------------------------
		if(Count($Users)){
			#-------------------------------------------------------------------------------
			$Array = Array();
			#-------------------------------------------------------------------------------
			foreach(Array_Keys($Users) as $UserID)
				$Array[] = SPrintF("'%s'",$UserID);
			#-------------------------------------------------------------------------------
			$Where = SPrintF('`ServerID` = %u AND `Login` IN (%s)',$Server['ID'],Implode(',',$Array));
			#-------------------------------------------------------------------------------
			$Orders = DB_Select(SPrintF('%sOrdersOwners',$Server['Code']),Array('ID','OrderID','Login'),Array('Where'=>$Where));
			#-------------------------------------------------------------------------------
			switch(ValueOf($Orders)){
			case 'error':
				return ERROR | @Trigger_Error(500);
			case 'exception':
				# No more...
				break;
			case 'array':
				//Debug(print_r($Orders,true));
				#-------------------------------------------------------------------------------
				foreach($Orders as $Order){
					#-------------------------------------------------------------------------------
					$Parked = $Users[$Order['Login']];
					#-------------------------------------------------------------------------------
					ASort($Parked);
					#-------------------------------------------------------------------------------
					$IOrders = Array('Domain'=>(Count($Parked)?Current($Parked):'not-found'));
					#-------------------------------------------------------------------------------
					// у ВПС обновляем дисковый шаблон
					if($Server['Code'] == 'VPS'){
						#-------------------------------------------------------------------------------
						$IsUpdate = DB_Update('Orders',Array('Params'=>Array('DiskTemplate'=>Current($Parked))),Array('ID'=>$Order['OrderID']));
						if(Is_Error($IsUpdate))
							return ERROR | @Trigger_Error(500);
						#-------------------------------------------------------------------------------
					}else{
						#-------------------------------------------------------------------------------
						$IOrders['Parked'] = Implode(',',$Parked);
						#-------------------------------------------------------------------------------
						$IsUpdate = DB_Update(SPrintF('%sOrders',$Server['Code']),$IOrders,Array('ID'=>$Order['ID']));
						if(Is_Error($IsUpdate))
							return ERROR | @Trigger_Error(500);
						#-------------------------------------------------------------------------------
					}
					#-------------------------------------------------------------------------------
				}
				#-------------------------------------------------------------------------------
				break;
				#-------------------------------------------------------------------------------
			default:
				return ERROR | @Trigger_Error(101);
			}
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		break 2;
		#-------------------------------------------------------------------------------
	default:
		return ERROR | @Trigger_Error(101);
	}
	#-------------------------------------------------------------------------------
default:
	return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$Server['Params']['LastQuestioning'] = Time();
#-------------------------------------------------------------------------------
$IsUpdate = DB_Update('Servers',Array('Params'=>$Server['Params']),Array('ID'=>$Server['ID']));
if(Is_Error($IsUpdate))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
return 30;
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
?>
