<?php

#-------------------------------------------------------------------------------
/** @author Великодный В.В. (Joonte Ltd.) */
/******************************************************************************/
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/

// проверяем временную таблицу, не работает ли уже задача
$TmpData = DB_Select('TmpData','*',Array('UNIQ','Where'=>Array('`AppID` = "Tasks.WorksComplite"'),'SortOn'=>'CreateDate','Limits'=>Array(0,1)));
#-------------------------------------------------------------------------------
switch(ValueOf($TmpData)){
case 'error':
        return ERROR | @Trigger_Error(500);
case 'exception':
	#-------------------------------------------------------------------------------
	// задача не зааущена, надо запустить
	$Contracts = DB_Select('Contracts','ID');
	#-------------------------------------------------------------------------------
	switch(ValueOf($Contracts)){
	case 'error':
		return ERROR | @Trigger_Error(500);
	case 'exception':
		#-------------------------------------------------------------------------------
		// не требует выполнения
		return StrToTime('next saturday') + 1000;
		#-------------------------------------------------------------------------------
	case 'array':
		#-------------------------------------------------------------------------------
		// сохраняем список идентифкаторов во временную таблицу, для полседующей обработки
		$IsInsert = DB_Insert('TmpData',Array('AppID'=>'Tasks.WorksComplite','Params'=>$Contracts));
		if(Is_Error($IsInsert))
			return ERROR | @Trigger_Error(500);
		#-------------------------------------------------------------------------------
		$GLOBALS['TaskReturnInfo'] = Array(SPrintF('Contracts remaining: %s',SizeOf($Contracts)));
		#-------------------------------------------------------------------------------
		// верёнмся к задаче в след. цикл
		return 20;
		#-------------------------------------------------------------------------------
	default:
		return ERROR | @Trigger_Error(101);
	}
	#-------------------------------------------------------------------------------
case 'array':
	#-------------------------------------------------------------------------------
	// задача ранее запускалась, есть массив с номерами договоров
	#-------------------------------------------------------------------------------
	$CurrentMonth = (Date('Y') - 1970)*12 + (integer)Date('n');
	#-------------------------------------------------------------------------------
	$Count = 0;	// счётчик для выхода из цикла обработки
	#-------------------------------------------------------------------------------
	foreach(Array_Keys($TmpData['Params']) as $Key){
		#-------------------------------------------------------------------------------
		// достаём номер контракта (ключ нужен потом, для удаления из массива уже обработанного договора)
		$Contract = $TmpData['Params'][$Key];
		#-------------------------------------------------------------------------------
		$Columns = Array('CreateDate','ContractID','Month','ServiceID','Comment','SUM(`Amount`) as `Amount`','Cost','Discont');
		#-------------------------------------------------------------------------------
		$WorksComplite = DB_Select('WorksComplite',$Columns,Array('GroupBy'=>Array('ServiceID','Month','Comment','Cost','Discont'),'Where'=>SPrintF('`ContractID` = %u',$Contract['ID'],$CurrentMonth)));
		#-------------------------------------------------------------------------------
		switch(ValueOf($WorksComplite)){
		case 'error':
			return ERROR | @Trigger_Error(500);
		case 'exception':
			# No more...
			break;
		case 'array':
			#-------------------------------------------------------------------------------
			#-----------------------------TRANSACTION---------------------------------------
			if(Is_Error(DB_Transaction($TransactionID = UniqID('WorksComplite'))))
				return ERROR | @Trigger_Error(500);
			#-------------------------------------------------------------------------------
			$IsDelete = DB_Delete('WorksComplite',Array('Where'=>SPrintF('`ContractID` = %u',$Contract['ID'])));
			if(Is_Error($IsDelete))
				return ERROR | @Trigger_Error(500);
			#-------------------------------------------------------------------------------
			foreach($WorksComplite as $WorkComplite){
				#-------------------------------------------------------------------------------
				$IsInsert = DB_Insert('WorksComplite',$WorkComplite);
				if(Is_Error($IsInsert))
					return ERROR | @Trigger_Error(500);
				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
			if(Is_Error(DB_Commit($TransactionID)))
				return ERROR | @Trigger_Error(500);
			#-------------------------------------------------------------------------------
			break;
			#-------------------------------------------------------------------------------
		default:
			return ERROR | @Trigger_Error(101);
		}
		#-------------------------------------------------------------------------------
		UnSet($TmpData['Params'][$Key]);
		#-------------------------------------------------------------------------------
		$Count++;
		#-------------------------------------------------------------------------------
		$GLOBALS['TaskReturnInfo'] = Array(SPrintF('Contracts remaining: %s',SizeOf($TmpData['Params'])));
		#-------------------------------------------------------------------------------
		// если обработано случайное число договоров, продолжим позднее
		if($Count == 1111){ // чтоб цифры в логе различались
			#-------------------------------------------------------------------------------
			// сохраняем обновлённый массив
			$IsUpdate = DB_Update('TmpData',Array('Params'=>$TmpData['Params']),Array('ID'=>$TmpData['ID']));
			if(Is_Error($IsUpdate))
				return ERROR | @Trigger_Error(500);
			#-------------------------------------------------------------------------------
			return 20;
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	break;
	#-------------------------------------------------------------------------------
default:
	return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
// тут мы оказываемся после обработки всех договоров
// удаляем запись из таблицы
$IsDelete = DB_Delete('TmpData',Array('ID'=>$TmpData['ID']));
if(Is_Error($IsDelete))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
return StrToTime('next saturday') + 1000;
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

?>
