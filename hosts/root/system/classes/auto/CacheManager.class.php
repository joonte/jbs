<?php
/**
 * Manage of system cache.
 *
 * @author vvelikodny
 */
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
class CacheManager {
	#-------------------------------------------------------------------------------
	/** Cache singleton instance. */
	protected static $instance = NULL;
	#-------------------------------------------------------------------------------
	public static function init() {
		#-------------------------------------------------------------------------------
		if(self::$instance === NULL){
			#-------------------------------------------------------------------------------
			try{
				#-------------------------------------------------------------------------------
				Debug("[system/classes/auto/CacheManager.class.php]: Start initializing cache system.");
				#-------------------------------------------------------------------------------
				if(Extension_Loaded(MemcachedCache::EXT_NAME) && File_Exists(SPrintF('%s/.memcached',SYSTEM_PATH))){
					#-------------------------------------------------------------------------------
					Debug('[system/classes/auto/CacheManager.class.php]: Force load MemcachedCache');
					#-------------------------------------------------------------------------------
					self::$instance = MemcachedCache::getInstance();
					#-------------------------------------------------------------------------------
				}else if(Extension_Loaded(APCCache::EXT_NAME)){
					#-------------------------------------------------------------------------------
					Debug('[system/classes/auto/CacheManager.class.php]: Load APCCache');
					#-------------------------------------------------------------------------------
					self::$instance = APCCache::getInstance();
					#-------------------------------------------------------------------------------
				}else if(Extension_Loaded(APCuCache::EXT_NAME)){
					#-------------------------------------------------------------------------------
					Debug('[system/classes/auto/CacheManager.class.php]: Load APCuCache');
					#-------------------------------------------------------------------------------
					self::$instance = APCuCache::getInstance();
					#-------------------------------------------------------------------------------
				}else if(Extension_Loaded(MemcachedCache::EXT_NAME)){
					#-------------------------------------------------------------------------------
					Debug('[system/classes/auto/CacheManager.class.php]: Load MemcachedCache');
					#-------------------------------------------------------------------------------
					self::$instance = MemcachedCache::getInstance();
					#-------------------------------------------------------------------------------
				}else{
					#-------------------------------------------------------------------------------
					throw new Exception("Any supported cache not installed in your sysytem.");
				}
				#-------------------------------------------------------------------------------
				Debug("Cache system has been initialized.");
				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
			#-------------------------------------------------------------------------------
			catch(Exception $e){
				#-------------------------------------------------------------------------------
				Debug("Cache system has not been installed: ".$e->getTraceAsString());
				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		return self::$instance;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	protected function __construct() { }
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	/**
	* Adds new pair key/value to cache.
	*
	* @return
	*/
	#-------------------------------------------------------------------------------
	public static function add($key, $value, $ttl = 0) {
		#-------------------------------------------------------------------------------
		if (self::isEnabled()) {
			#-------------------------------------------------------------------------------
			//Debug(sprintf("Adds new key/value to cache [key=%s, ttl=%d]", $key, $ttl));
			return self::$instance->add($key, $value, $ttl);
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		return FALSE;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	/**
	* Gets value for given key from cache.
	*
	* @return
	*/
	#-------------------------------------------------------------------------------
	public static function get($key) {
		#-------------------------------------------------------------------------------
		if (self::isEnabled()) {
			#-------------------------------------------------------------------------------
			//Debug(sprintf("Gets value from cache [key=%s]", $key));
			return self::$instance->get($key);
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		return FALSE;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	public static function flush() {
		#-------------------------------------------------------------------------------
		if (self::isEnabled()) {
			#-------------------------------------------------------------------------------
			Debug("Flush the system cache.");
			#-------------------------------------------------------------------------------
			return self::$instance->flush();
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		return FALSE;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	public static function getStat() {
		#-------------------------------------------------------------------------------
		if (self::isEnabled()) {
			#-------------------------------------------------------------------------------
			return self::$instance->getStatistic();
			#-------------------------------------------------------------------------------
		}
		#-------------------------------------------------------------------------------
		return FALSE;
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	public static function isEnabled() {
		#-------------------------------------------------------------------------------
		return IsSet(self::$instance);
		#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

?>
