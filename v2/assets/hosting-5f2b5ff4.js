import{s as R,r,a1 as S,a2 as h}from"./index-aeb1df1e.js";const C=R("hosting",()=>{const d=r({}),f=r(null);async function g(){try{const i=await S.post(h.fetchHostingOrders);i!=null&&i.data?d.value=i.data:d.value={}}catch(i){console.error("Ошибка при загрузке заказов хостинга:",i),d.value={}}}async function O(){await S.post(h.fetchHostingSchemes).then(i=>{f.value=i.data})}async function o(i){let c="ERROR",l=null,t=null;return await S.post(h.HostingOrder,i).then(a=>{var u,n;((u=a==null?void 0:a.data)==null?void 0:u.Status)==="Ok"?(c="SUCCESS",t=a==null?void 0:a.data):l=(n=a==null?void 0:a.data)==null?void 0:n.Exception}),{result:c,info:t,error:l}}async function H(i){let c="ERROR",l=null;return await S.post(h.HostingOrderPay,i).then(t=>{var a,u,n;((a=t==null?void 0:t.data)==null?void 0:a.Status)==="Ok"?c="SUCCESS":((u=t==null?void 0:t.data)==null?void 0:u.Status)==="UseBasket"?c="BASKET":l=(n=t==null?void 0:t.data)==null?void 0:n.Exception}),{result:c,error:l}}async function E(i){let c="ERROR",l=null;return await S.post(h.HostingOrderSchemeChange,i).then(t=>{var a;((a=t==null?void 0:t.data)==null?void 0:a.Status)==="Ok"&&(c="SUCCESS")}),{result:c,error:l}}return{hostingList:d,hostingSchemes:f,fetchHostingOrders:g,fetchHostingSchemes:O,HostingOrder:o,HostingOrderPay:H,HostingOrderSchemeChange:E}});export{C as u};
