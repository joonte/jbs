import{s as v,r as f,a1 as i,a2 as c,a3 as w}from"./index-aeb1df1e.js";const R=v("DSOrders",()=>{const e=f({}),D=f(null),O=f(null),n=f(null);async function h(){try{const t=await i.post(c.fetchDSOrders);t!=null&&t.data?e.value=t.data:e.value={}}catch(t){console.error("Ошибка при загрузке выделенных серверов:",t),e.value={}}}async function I(){await i.post(c.fetchDSSchemes).then(t=>{D.value=t.data})}async function y(t){await i.post(c.DSOrderIPMI,{OrderID:t}).then(r=>{O.value=r.data})}async function P(){await w.get(""+c.DSOrderIPMI+"?IsSensors=true&OrderID=1033").then(t=>{n.value=t.data})}async function o(t){let r="ERROR",l=null,a=null;return await i.post(c.DSOrder,t).then(S=>{var u,d;((u=S==null?void 0:S.data)==null?void 0:u.Status)==="Ok"?(r="SUCCESS",a=S==null?void 0:S.data):l=(d=S==null?void 0:S.data)==null?void 0:d.Exception}),{result:r,info:a,error:l}}async function E(t){let r="ERROR",l=null;return await i.post(c.DSOrderPay,t).then(a=>{var S,u,d;((S=a==null?void 0:a.data)==null?void 0:S.Status)==="Ok"?r="SUCCESS":((u=a==null?void 0:a.data)==null?void 0:u.Status)==="UseBasket"?r="BASKET":l=(d=a==null?void 0:a.data)==null?void 0:d.Exception}),{result:r,error:l}}return{DSList:e,DSSchemes:D,DSOrderIPMI:O,DSOrderIPMISensors:n,fetchDSOrders:h,fetchDSSchemes:I,fetchDSOrderIPMISensors:P,fetchDSOrderIPMI:y,DSOrder:o,DSOrderPay:E}});export{R as u};
