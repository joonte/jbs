import{s as z,r as E,a1 as R,a2 as O,a3 as h}from"./index-777dc609.js";const G=z("Services",()=>{const P=E(null),k=E({}),w=E(null),y=E(null),C=E(null),D=E(null);async function I(){await R.post(O.fetchServices).then(S=>{P.value=S.data})}async function v(){await R.post(O.DNSmanagerOrders).then(S=>{y.value=S.data})}async function U(){await R.post(O.ExtraIPOrders).then(S=>{C.value=S.data})}async function r(){await R.post(O.ISPswOrders).then(S=>{D.value=S.data})}async function N(S){let u="ERROR",t=null,a=null,i=null,{Code:d="Default"}=S;return d==="Default"?i=O.ServiceOrder:i="/API/"+d+"Order",await h.post(""+i,S).then(l=>{var c,f;((c=l==null?void 0:l.data)==null?void 0:c.Status)==="Ok"?(u="SUCCESS",a=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:u,info:a,error:t}}async function B(S){let u="ERROR",t=null,a=null,i=null,{Code:d="Default"}=S;return d==="Default"?i="/API/DNSmanagerOrder":i="/API/"+d+"Order",await h.post(""+i,S).then(l=>{var c,f;((c=l==null?void 0:l.data)==null?void 0:c.Status)==="Ok"?(u="SUCCESS",a=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:u,info:a,error:t}}async function x(S){let u="ERROR",t=null,a=null,i=null,{Code:d="Default"}=S;return d==="Default"?i=O.ExtraIPOrder:i="/API/"+d+"Order",await h.post(""+i,S).then(l=>{var c,f;((c=l==null?void 0:l.data)==null?void 0:c.Status)==="Ok"?(u="SUCCESS",a=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:u,info:a,error:t}}async function m(S){let u="ERROR",t=null,a=null,i=null,{Code:d="Default"}=S;return d==="Default"?i=O.ISPswOrder:i="/API/"+d+"Order",await h.post(""+i,S).then(l=>{var c,f;((c=l==null?void 0:l.data)==null?void 0:c.Status)==="Ok"?(u="SUCCESS",a=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:u,info:a,error:t}}async function g(S){let u="ERROR";return await R.post(O.ExtraIPOrderPay,S).then(t=>{var a,i,d;((a=t==null?void 0:t.data)==null?void 0:a.Status)==="UseBasket"&&(u="UseBasket"),((i=t==null?void 0:t.data)==null?void 0:i.Status)==="NoBasket"&&(u="NoBasket"),((d=t==null?void 0:t.data)==null?void 0:d.Status)==="Ok"&&(u="NoBasket")}),u}async function L(S){let u="ERROR";return await R.post(O.ISPswOrderPay,S).then(t=>{var a,i,d;((a=t==null?void 0:t.data)==null?void 0:a.Status)==="UseBasket"&&(u="UseBasket"),((i=t==null?void 0:t.data)==null?void 0:i.Status)==="NoBasket"&&(u="NoBasket"),((d=t==null?void 0:t.data)==null?void 0:d.Status)==="Ok"&&(u="NoBasket")}),u}async function A(S){let u="ERROR";return await R.post(O.DNSOrderPay,S).then(t=>{var a,i,d;((a=t==null?void 0:t.data)==null?void 0:a.Status)==="UseBasket"&&(u="UseBasket"),((i=t==null?void 0:t.data)==null?void 0:i.Status)==="NoBasket"&&(u="NoBasket"),((d=t==null?void 0:t.data)==null?void 0:d.Status)==="Ok"&&(u="NoBasket")}),u}async function K(S="Default",u){let t="ERROR",a=null,i=null;return S==="Default"?i=O.ServiceOrderPay:i="/"+S+"OrderPay",await h.post(""+i,u).then(d=>{var l,c,f;((l=d==null?void 0:d.data)==null?void 0:l.Status)==="Ok"?t="SUCCESS":((c=d==null?void 0:d.data)==null?void 0:c.Status)==="UseBasket"?t="BASKET":a=(f=d==null?void 0:d.data)==null?void 0:f.Exception}),{result:t,error:a}}async function T(S){let u="ERROR",t=null;return await h.post("/API/v2/"+S+"Schemes",{}).then(a=>{var i;a!=null&&a.data?(u="SUCCESS",k.value[S]=a==null?void 0:a.data):t=(i=a==null?void 0:a.data)==null?void 0:i.Exception}),{result:u,error:t}}async function b(S){let u="ERROR",t=null;return await R.post(O.DNSmanagerOrderSchemeChange,S).then(a=>{var i;((i=a==null?void 0:a.data)==null?void 0:i.Status)==="Ok"&&(u="SUCCESS")}),{result:u,error:t}}async function j(S){let u="ERROR",t=null;return await R.post(O.ISPswOrderSchemeChange,S).then(a=>{var i;((i=a==null?void 0:a.data)==null?void 0:i.Status)==="Ok"&&(u="SUCCESS")}),{result:u,error:t}}async function q(S){let u="ERROR",t=null;return await R.post(O.DependServices,S).then(a=>{var i;a!=null&&a.data?(u="SUCCESS",w.value=a==null?void 0:a.data):t=(i=a==null?void 0:a.data)==null?void 0:i.Exception}),{result:u,error:t}}return{ServicesList:P,additionalServicesScheme:k,DependServicesList:w,fetchAdditionalServiceScheme:T,fetchDependServices:q,ServiceOrderPay:K,fetchServices:I,ServiceOrder:N,DNSmanagerOrder:B,ISPswOrder:m,ExtraIPOrder:x,fetchDNSmanagerOrders:v,DNSmanagerOrdersList:y,DNSmanagerOrderSchemeChange:b,ISPswOrdersList:D,fetchISPswOrders:r,ISPswOrderSchemeChange:j,ISPswOrderPay:L,DNSOrderPay:A,fetchExtraIPOrders:U,ExtraIPOrdersList:C,ExtraIPOrderPay:g}});export{G as u};
