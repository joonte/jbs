import{s as q,r as R,a1 as r,a2 as O,a3 as E}from"./index-aeb1df1e.js";const F=q("Services",()=>{const h=R({}),y=R({}),P=R([]),k=R(null),v=R(null),w=R(null);async function C(){try{const a=await r.post(O.fetchServices);a!=null&&a.data?h.value=a.data:h.value={}}catch(a){console.error("Ошибка при загрузке сервисов:",a),h.value={}}}async function D(){await r.post(O.DNSmanagerOrders).then(a=>{k.value=a.data})}async function I(){await r.post(O.ExtraIPOrders).then(a=>{v.value=a.data})}async function U(){await r.post(O.ISPswOrders).then(a=>{w.value=a.data})}async function N(a){let i="ERROR",t=null,u=null,S=null,{Code:c="Default"}=a;return c==="Default"?S=O.ServiceOrder:S="/API/"+c+"Order",await E.post(""+S,a).then(l=>{var d,f;((d=l==null?void 0:l.data)==null?void 0:d.Status)==="Ok"?(i="SUCCESS",u=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:i,info:u,error:t}}async function B(a){let i="ERROR",t=null,u=null,S=null,{Code:c="Default"}=a;return c==="Default"?S="/API/DNSmanagerOrder":S="/API/"+c+"Order",await E.post(""+S,a).then(l=>{var d,f;((d=l==null?void 0:l.data)==null?void 0:d.Status)==="Ok"?(i="SUCCESS",u=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:i,info:u,error:t}}async function m(a){let i="ERROR",t=null,u=null,S=null,{Code:c="Default"}=a;return c==="Default"?S=O.ExtraIPOrder:S="/API/"+c+"Order",await E.post(""+S,a).then(l=>{var d,f;((d=l==null?void 0:l.data)==null?void 0:d.Status)==="Ok"?(i="SUCCESS",u=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:i,info:u,error:t}}async function x(a){let i="ERROR",t=null,u=null,S=null,{Code:c="Default"}=a;return c==="Default"?S=O.ISPswOrder:S="/API/"+c+"Order",await E.post(""+S,a).then(l=>{var d,f;((d=l==null?void 0:l.data)==null?void 0:d.Status)==="Ok"?(i="SUCCESS",u=l==null?void 0:l.data):t=(f=l==null?void 0:l.data)==null?void 0:f.Exception}),{result:i,info:u,error:t}}async function g(a){let i="ERROR";return await r.post(O.ExtraIPOrderPay,a).then(t=>{var u,S,c;((u=t==null?void 0:t.data)==null?void 0:u.Status)==="UseBasket"&&(i="UseBasket"),((S=t==null?void 0:t.data)==null?void 0:S.Status)==="NoBasket"&&(i="NoBasket"),((c=t==null?void 0:t.data)==null?void 0:c.Status)==="Ok"&&(i="NoBasket")}),i}async function L(a){let i="ERROR";return await r.post(O.ISPswOrderPay,a).then(t=>{var u,S,c;((u=t==null?void 0:t.data)==null?void 0:u.Status)==="UseBasket"&&(i="UseBasket"),((S=t==null?void 0:t.data)==null?void 0:S.Status)==="NoBasket"&&(i="NoBasket"),((c=t==null?void 0:t.data)==null?void 0:c.Status)==="Ok"&&(i="NoBasket")}),i}async function A(a){let i="ERROR";return await r.post(O.DNSOrderPay,a).then(t=>{var u,S,c;((u=t==null?void 0:t.data)==null?void 0:u.Status)==="UseBasket"&&(i="UseBasket"),((S=t==null?void 0:t.data)==null?void 0:S.Status)==="NoBasket"&&(i="NoBasket"),((c=t==null?void 0:t.data)==null?void 0:c.Status)==="Ok"&&(i="NoBasket")}),i}async function e(a="Default",i){let t="ERROR",u=null,S=null;return a==="Default"?S=O.ServiceOrderPay:S="/"+a+"OrderPay",await E.post(""+S,i).then(c=>{var l,d,f;((l=c==null?void 0:c.data)==null?void 0:l.Status)==="Ok"?t="SUCCESS":((d=c==null?void 0:c.data)==null?void 0:d.Status)==="UseBasket"?t="BASKET":u=(f=c==null?void 0:c.data)==null?void 0:f.Exception}),{result:t,error:u}}async function K(a){let i="ERROR",t=null;return await E.post("/API/v2/"+a+"Schemes",{}).then(u=>{var S;u!=null&&u.data?(i="SUCCESS",y.value[a]=u==null?void 0:u.data):t=(S=u==null?void 0:u.data)==null?void 0:S.Exception}),{result:i,error:t}}async function T(a){let i="ERROR",t=null;return await r.post(O.DNSmanagerOrderSchemeChange,a).then(u=>{var S;((S=u==null?void 0:u.data)==null?void 0:S.Status)==="Ok"&&(i="SUCCESS")}),{result:i,error:t}}async function b(a){let i="ERROR",t=null;return await r.post(O.ISPswOrderSchemeChange,a).then(u=>{var S;((S=u==null?void 0:u.data)==null?void 0:S.Status)==="Ok"&&(i="SUCCESS")}),{result:i,error:t}}async function j(a){var i;try{const t=await r.post(O.DependServices,a);return t!=null&&t.data?(P.value=t.data,{result:"SUCCESS",error:null}):(P.value=[],{result:"ERROR",error:(i=t==null?void 0:t.data)==null?void 0:i.Exception})}catch(t){return console.error("Ошибка при загрузке зависимых сервисов:",t),P.value=[],{result:"ERROR",error:t.message}}}return{ServicesList:h,additionalServicesScheme:y,DependServicesList:P,fetchAdditionalServiceScheme:K,fetchDependServices:j,ServiceOrderPay:e,fetchServices:C,ServiceOrder:N,DNSmanagerOrder:B,ISPswOrder:x,ExtraIPOrder:m,fetchDNSmanagerOrders:D,DNSmanagerOrdersList:k,DNSmanagerOrderSchemeChange:T,ISPswOrdersList:w,fetchISPswOrders:U,ISPswOrderSchemeChange:b,ISPswOrderPay:L,DNSOrderPay:A,fetchExtraIPOrders:I,ExtraIPOrdersList:v,ExtraIPOrderPay:g}});export{F as u};
